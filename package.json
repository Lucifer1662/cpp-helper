{
  "name": "lukes-cpp-helper",
  "displayName": "Luke's C++ helper",
  "description": "helps write cpp code",
  "version": "1.5.4",
  "repository": "https://github.com/Lucifer1662/cpp-helper",
  "publisher": "personal-luke",
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:cpp-helper.moveImplementation",
    "onCommand:cpp-helper.moveAllImplementation",
    "onCommand:cpp-helper.createConstructor",
    "onCommand:cpp-helper.createDefaultConstructors",
    "onCommand:cpp-helper.moveToHeader",
    "onCommand:cpp-helper.addIncludes",
    "onCommand:cpp-helper.addIncludeFor",
    "onCommand:cpp-helper.gccErrors",
    "onLanguage:markdown",
    "onLanguage:cpp"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cpp-helper.moveImplementation",
        "title": "Move Implementation to cpp"
      },
      {
        "command": "cpp-helper.moveAllImplementation",
        "title": "Move All Implementation to cpp"
      },
      {
        "command": "cpp-helper.createConstructor",
        "title": "Generate constructor"
      },
      {
        "command": "cpp-helper.createDefaultConstructors",
        "title": "Generate Default Constructors"
      },
      {
        "command": "cpp-helper.moveToHeader",
        "title": "Move To Header"
      },
      {
        "command": "cpp-helper.addIncludes",
        "title": "Add Includes"
      },
      {
        "command": "cpp-helper.addIncludeFor",
        "title": "Add Includes For"
      },
      {
        "command": "cpp-helper.gccErrors",
        "title": "Build and parse errors (gcc)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == cpp && cpp-helper.moveImplementation.cm",
          "command": "cpp-helper.moveImplementation",
          "group": "CppHelper@1"
        },
        {
          "when": "resourceLangId == cpp && cpp-helper.moveAllImplementation.cm",
          "command": "cpp-helper.moveAllImplementation",
          "group": "CppHelper@1"
        },
        {
          "when": "resourceLangId == cpp && cpp-helper.createConstructor.cm",
          "command": "cpp-helper.createConstructor",
          "group": "CppHelper@1"
        },
        {
          "when": "resourceLangId == cpp && cpp-helper.createDefaultConstructors.cm",
          "command": "cpp-helper.createDefaultConstructors",
          "group": "CppHelper@1"
        },
        {
          "when": "resourceLangId == cpp && cpp-helper.moveToHeader.cm",
          "command": "cpp-helper.moveToHeader",
          "group": "CppHelper@1"
        },
        {
          "when": "resourceLangId == cpp && cpp-helper.addIncludes.cm",
          "command": "cpp-helper.addIncludes",
          "group": "CppHelper@1"
        },
        {
          "when": "resourceLangId == cpp && cpp-helper.addIncludeFor.cm",
          "command": "cpp-helper.addIncludeFor",
          "group": "CppHelper@1"
        }
      ]
    },
    "configuration": {
      "title": "Luke's C++ Helper",
      "properties": {
        "lukes-cpp-helper.externalIncludeFolders": {
          "type": "array",
          "default": [
            "include"
          ],
          "items": {
            "type": "string"
          },
          "description": "Folders that are external, their content will be include using <> notation, eg #include <boost/asio>"
        },
        "lukes-cpp-helper.haveInContextMenu": {
          "type": "array",
          "default": [
            "moveImplementation",
            "moveAllImplementation",
            "createConstructor",
            "createDefaultConstructors",
            "moveToHeader",
            "addIncludes",
            "addIncludeFor"
          ],
          "items": {
            "type": "string"
          },
          "description": "What commands should be available in the context menu, by default they are all present. Reload to vscode for effects to take place. \n Valid items: moveImplementation, moveAllImplementation, createConstructor, createDefaultConstructors, moveToHeader, addIncludes, addIncludeFor "
        },
        "lukes-cpp-helper.buildAndReportGccCmds": {
          "type": "array",
          "default": [
            "${workspaceFolder}/build"
          ],
          "items": {
            "type": "string"
          },
          "description": ""
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/node-fetch": "^2.6.2",
    "@types/vscode": "^1.67.0",
    "@typescript-eslint/eslint-plugin": "^5.27.0",
    "@typescript-eslint/parser": "^5.27.0",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^8.16.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.2",
    "node-fetch": "^2.6.1"
  },
  "dependencies": {}
}